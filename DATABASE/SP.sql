USE [QLDSV_TC]
GO

-- Lấy danh sách các phân mảnh
CREATE VIEW [dbo].[V_DS_PHANMANH]
AS
SELECT  TENKHOA=PUBS.description, TENSERVER= subscriber_server
FROM dbo.sysmergepublications PUBS,  dbo.sysmergesubscriptions SUBS
WHERE PUBS.pubid= SUBS.PUBID  AND PUBS.publisher <> SUBS.subscriber_server
GO
-- SELECT * FROM [dbo].[V_DS_PHANMANH]
--SELECT * FROM dbo.sysmergepublications
--SELECT * FROM dbo.sysmergesubscriptions

-- Tạo login
CREATE PROC [dbo].[SP_TAOLOGIN]
  @LGNAME VARCHAR(50),
  @PASS VARCHAR(50),
  @USERNAME VARCHAR(50),
  @ROLE VARCHAR(50)
AS
	--U: Windows Login Accounts
	--S: SQL Login Accounts
	--G: Windows Group Login Accounts
	IF EXISTS(SELECT NAME FROM sys.server_principals 
				WHERE TYPE IN ('U', 'S', 'G')	
				AND NAME NOT LIKE '%##%'
				AND NAME = @LGNAME)
	BEGIN				
		SELECT 1	--Trùng Login
		RETURN
	END
	ELSE IF EXISTS(SELECT NAME FROM sys.database_principals
					WHERE TYPE_DESC = 'SQL_USER'
					AND NAME = @USERNAME)
	BEGIN
		SELECT 2	--Trùng User
		RETURN
	END

	DECLARE @RET INT
	EXEC @RET= SP_ADDLOGIN @LGNAME, @PASS,'QLDSV_TC'
	IF (@RET = 1) -- thất bại
	BEGIN 
		SELECT 3
		RETURN
	END
	EXEC @RET= SP_GRANTDBACCESS @LGNAME, @USERNAME
	IF (@RET = 1) 
	BEGIN
		EXEC SP_DROPLOGIN @LGNAME
		SELECT 4
		RETURN
	END

	EXEC sp_addrolemember @ROLE, @USERNAME
	IF @ROLE= 'PGV' OR @ROLE= 'KHOA' OR @ROLE = 'PKT'
	EXEC sp_addsrvrolemember @LGNAME, 'SecurityAdmin'

	SELECT 0  -- Thành công
	RETURN
GO
-- [dbo].[SP_TAOLOGIN] 'sa', '123', 'gv01', 'PGV'

-- Xóa login
CREATE PROC [dbo].[SP_XOALOGIN]
  @LGNAME VARCHAR(50),
  @USRNAME VARCHAR(50)
AS
  EXEC SP_DROPUSER @USRNAME
  EXEC SP_DROPLOGIN @LGNAME


-- Lấy thông tin tài khoản từ login
CREATE PROC [dbo].[SP_DANGNHAP]
@TENLOGIN NVARCHAR (50)
AS
DECLARE @TENUSER NVARCHAR(50)
SELECT @TENUSER=NAME FROM sys.sysusers WHERE sid = SUSER_SID(@TENLOGIN)
 
 SELECT USERNAME = @TENUSER, 
  HOTEN = (SELECT HO+ ' '+ TEN FROM GIANGVIEN  WHERE MAGV = @TENUSER ),
   ROLENAME=NAME
   FROM sys.sysusers 
   WHERE UID = (SELECT GROUPUID 
                 FROM SYS.SYSMEMBERS 
                   WHERE MEMBERUID= (SELECT UID FROM sys.sysusers 
                                      WHERE NAME=@TENUSER))
GO

-- Đặt mật khẩu cho tài khoản sinh viên
CREATE PROC SP_DATMATKHAU
@MASV NCHAR(10), @PASSWORD NVARCHAR(40)
AS
BEGIN
	UPDATE SINHVIEN
	SET PASSWORD = CONVERT(VARCHAR(32), HASHBYTES('MD5', @PASSWORD), 2)
	WHERE MASV = @MASV
END
GO
-- SP_DATMATKHAU 'N15DCCN001', '123'

-- Kiểm tra thông tin đăng nhập của sinh viên
CREATE PROC [dbo].[SP_SV_DANGNHAP]
@USERNAME NCHAR(10), @PASSWORD NVARCHAR(40)
AS
BEGIN
	DECLARE @encryptPass NVARCHAR(40) = CONVERT(VARCHAR(32), HASHBYTES('MD5', @PASSWORD), 2)
	SELECT MASV, HOTENSV = HO + ' ' + TEN, MALOP
	FROM SINHVIEN 
	WHERE MASV = @USERNAME AND PASSWORD = @encryptPass AND DANGHIHOC = 'FALSE'
END
GO
-- [dbo].[SP_SV_DANGNHAP] 'n15dccn001', '123'

-- Kiểm tra mã trùng
CREATE PROC [dbo].[SP_CHECKID]
@Code NVARCHAR(15), @Type NVARCHAR(15)
AS
BEGIN
	DECLARE @return_value INT = 0
	-- Môn học
	IF(@Type = 'MAMH')
	BEGIN
		IF EXISTS(SELECT MAMH FROM dbo.MONHOC WHERE MAMH = @Code)
			SET @return_value = 1
	END
	-- Giảng viên
	IF(@Type = 'MAGV')
	BEGIN
		IF EXISTS(SELECT MAGV FROM dbo.GIANGVIEN WHERE MAGV = @Code)
			SET @return_value = 1
	END
	-- Lớp
	IF(@Type = 'MALOP')
	BEGIN
		IF EXISTS(SELECT MALOP FROM dbo.LOP WHERE MALOP = @Code)
			SET @return_value = 1 -- Mã tồn tại ở phân mảnh hiện tại
		ELSE IF EXISTS(SELECT * FROM LINK1.QLDSV_TC.dbo.LOP WHERE MALOP = @Code)
			SET @return_value = 2 --Mã tồn tại ở phân mảnh khác
	END
	-- Sinh viên
	IF(@Type = 'MASV')
	BEGIN
		IF EXISTS(SELECT MASV FROM dbo.SINHVIEN WHERE MASV = @Code)
			SET @return_value = 1 -- Mã tồn tại ở phân mảnh hiện tại
		ELSE IF EXISTS(SELECT * FROM LINK1.QLDSV_TC.dbo.SINHVIEN WHERE MASV = @Code)
			SET @return_value = 2 -- Mã tồn tại ở phân mảnh khác
	END
	SELECT @return_value
	RETURN
END
GO
-- [dbo].[SP_CHECKID] 'N15DCVT001', 'MASV'

-- Kiểm tra tên trùng
CREATE PROC [dbo].[SP_CHECKNAME]
@Name NVARCHAR(50),
@Type NVARCHAR(15)
AS
BEGIN
	DECLARE @return_value INT = 0
	IF(@Type = 'TENMH')
	BEGIN
		IF EXISTS(SELECT MAMH FROM dbo.MONHOC WHERE TENMH = @Name)
			SET @return_value = 1
	END
	IF(@Type = 'TENLOP')
	BEGIN
		IF EXISTS(SELECT MALOP FROM dbo.LOP WHERE TENLOP = @Name)
			SET @return_value = 1	-- Tên bị trùng ở phân mảnh hiện tại
		ELSE IF EXISTS(SELECT * FROM LINK1.QLDSV_TC.dbo.LOP WHERE TENLOP = @Name)
			SET @return_value = 2	-- Tên bị trùng ở phân mảnh khác
	END
	SELECT @return_value
	RETURN
END
GO
-- [dbo].[SP_CHECKNAME] N'Lập trình web', 'TENMH'

-- Kiểm tra lớp tín chỉ trùng
CREATE PROC [dbo].[SP_CHECK_LOPTINCHI]
@NIENKHOA NCHAR(9), @HOCKY INT, @MAMH NCHAR(10), @NHOM INT
AS
BEGIN
	DECLARE @return_value INT = 0
	IF EXISTS(SELECT MALTC FROM dbo.LOPTINCHI WHERE NIENKHOA = @NIENKHOA AND HOCKY = @HOCKY AND MAMH = @MAMH AND NHOM = @NHOM)
		SET @return_value = 1 -- Mã tồn tại ở phân mảnh hiện tại
	ELSE IF EXISTS(SELECT MALTC FROM LINK1.QLDSV_TC.dbo.LOPTINCHI WHERE NIENKHOA = @NIENKHOA AND HOCKY = @HOCKY AND MAMH = @MAMH AND NHOM = @NHOM)
		SET @return_value = 2 -- Mã tồn tại ở phân mảnh khác
	SELECT @return_value
	RETURN
END
GO

-- Kiểm tra thông tin học phí trùng
CREATE PROC [dbo].[SP_CHECK_HOCPHI]
@MASV NCHAR(10), @NIENKHOA NCHAR(9), @HOCKY INT
AS
BEGIN
	DECLARE @return_value INT = 0
	IF EXISTS(SELECT MASV FROM dbo.HOCPHI WHERE MASV = @MASV AND NIENKHOA = @NIENKHOA AND HOCKY = @HOCKY)
		SET @return_value = 1
	SELECT @return_value
	RETURN
END
GO

-- Kiểm tra chi tiết đóng học phí trùng
CREATE PROC [dbo].[SP_CHECK_CT_DONGHOCPHI]
@MASV NCHAR(10), @NIENKHOA NCHAR(9), @HOCKY INT, @NGAYDONG DATE
AS
BEGIN
	DECLARE @return_value INT = 0
	IF EXISTS(SELECT MASV FROM dbo.CT_DONGHOCPHI WHERE MASV = @MASV AND NIENKHOA = @NIENKHOA AND HOCKY = @HOCKY AND NGAYDONG = @NGAYDONG)
		SET @return_value = 1
	SELECT @return_value
	RETURN
END
GO

-- Lấy tất cả danh sách lớp tín chỉ theo niên khóa - học kỳ
CREATE PROC [dbo].[SP_LOPTINCHI]
@NK NCHAR(9), @HK INT
AS
BEGIN
	IF 1=0 BEGIN
		SET FMTONLY OFF
	END

	SELECT LTC.MALTC, SOSVDADANGKY = COUNT(MASV) INTO #DSSOSVDANGKY
	FROM (SELECT MALTC FROM LOPTINCHI WHERE NIENKHOA = @NK AND HOCKY = @HK) LTC
	LEFT JOIN (SELECT MALTC, MASV FROM DANGKY WHERE HUYDANGKY = 'FALSE') DK 
	ON LTC.MALTC = DK.MALTC
	GROUP BY LTC.MALTC

	SELECT LTC.MALTC, NIENKHOA, HOCKY, LTC.MAMH, TENMH, NHOM, LTC.MAGV, HOTENGV = HO + ' ' + TEN, MAKHOA, SOSVTOITHIEU, SOSVDADANGKY, HUYLOP
	FROM (SELECT * FROM LOPTINCHI WHERE NIENKHOA = @NK AND HOCKY = @HK) LTC,
		(SELECT MAMH, TENMH FROM MONHOC) MH, 
		(SELECT MAGV, HO, TEN FROM GIANGVIEN) GV, #DSSOSVDANGKY
	WHERE  LTC.MAMH = MH.MAMH AND LTC.MAGV = GV.MAGV AND LTC.MALTC = #DSSOSVDANGKY.MALTC
END
GO
-- [dbo].[SP_LOPTINCHI] '2021-2022', 1

-- Thêm lớp tín chỉ
CREATE PROC [dbo].[SP_LOPTINCHI_THEM]
@NIENKHOA NCHAR(9), @HOCKY INT, @MAMH NCHAR(10), @NHOM INT,
@MAGV NCHAR(10), @MAKHOA NCHAR(10), @SOSVTOITHIEU SMALLINT, @HUYLOP BIT
AS
BEGIN
	INSERT INTO LOPTINCHI (NIENKHOA, HOCKY, MAMH, NHOM, MAGV, MAKHOA, SOSVTOITHIEU, HUYLOP)
	VALUES (@NIENKHOA, @HOCKY, @MAMH, @NHOM, @MAGV, @MAKHOA, @SOSVTOITHIEU, @HUYLOP)
END
-- [dbo].[SP_LOPTINCHI_THEM] '2021-2022', '2', 'LTW', 1, 'GV01', 'CNTT', '10', 'FALSE'

-- Cập nhật lớp tín chỉ
CREATE PROC [dbo].[SP_LOPTINCHI_SUA]
@MALTC INT, @MAMH NCHAR(10), @NHOM INT,
@MAGV NCHAR(10), @SOSVTOITHIEU SMALLINT, @HUYLOP BIT
AS
BEGIN
	UPDATE LOPTINCHI 
	SET MAMH = @MAMH, NHOM = @NHOM, MAGV = @MAGV, SOSVTOITHIEU = @SOSVTOITHIEU, HUYLOP = @HUYLOP
	WHERE MALTC = @MALTC
END

-- Xóa lớp tín chỉ
CREATE PROC [dbo].[SP_LOPTINCHI_XOA]
@MALTC INT
AS
BEGIN
	DELETE FROM LOPTINCHI WHERE MALTC = @MALTC
END

-- Lấy danh sách lớp tín chỉ theo niên khóa - học kỳ (chưa hủy)
CREATE PROC [dbo].[SP_LAY_DS_LTC]
@NK NCHAR(9), @HK INT
AS
BEGIN
	IF 1=0 BEGIN
		SET FMTONLY OFF
	END

	SELECT MALTC INTO #LTCCODIEM
	FROM DANGKY
	WHERE DANGKY.DIEM_CC IS NOT NULL OR DANGKY.DIEM_CK IS NOT NULL OR DANGKY.DIEM_GK IS NOT NULL
	GROUP BY MALTC

	SELECT LTC.MALTC, SOSVDADANGKY = COUNT(MASV) INTO #DSSOSVDANGKY
	FROM (SELECT MALTC FROM LOPTINCHI WHERE NIENKHOA = @NK AND HOCKY = @HK AND HUYLOP = 'FALSE' AND MALTC NOT IN (SELECT MALTC FROM #LTCCODIEM)) LTC
	LEFT JOIN (SELECT MALTC, MASV FROM DANGKY WHERE HUYDANGKY = 'FALSE') DK 
	ON LTC.MALTC = DK.MALTC
	GROUP BY LTC.MALTC

	SELECT LTC.MALTC, LTC.MAMH, TENMH, NHOM, HOTENGV = HO + ' ' + TEN, SOSVTOITHIEU, SOSVDADANGKY
	FROM (SELECT MALTC, MAMH, NHOM, MAGV, SOSVTOITHIEU, HUYLOP FROM LOPTINCHI WHERE NIENKHOA = @NK AND HOCKY = @HK AND HUYLOP = 'FALSE') LTC,
		(SELECT MAMH, TENMH FROM MONHOC) MH, 
		(SELECT MAGV, HO, TEN FROM GIANGVIEN) GV, #DSSOSVDANGKY
	WHERE  LTC.MAMH = MH.MAMH AND LTC.MAGV = GV.MAGV AND LTC.MALTC = #DSSOSVDANGKY.MALTC
	ORDER BY TENMH, NHOM
END
GO
-- [dbo].[SP_LAY_DS_LTC] '2021-2022', 1

-- Lấy danh sách sinh viên đăng ký lớp tín chỉ
ALTER PROC [dbo].[SP_LAY_DSSV_DANGKY]
@MALTC INT
AS
BEGIN
	SELECT SV.MASV, HOTENSV = HO + ' ' + TEN, DIEM_CC, DIEM_GK, DIEM_CK
	FROM (SELECT MASV, DIEM_CC, DIEM_GK, DIEM_CK FROM DANGKY WHERE MALTC = @MALTC AND HUYDANGKY = 'FALSE') DSDK,
		(SELECT MASV, HO, TEN FROM SINHVIEN) SV
	WHERE  DSDK.MASV = SV.MASV
	ORDER BY SV.MASV
END
GO

-- Tạo type đăng ký
CREATE TYPE [dbo].[TYPE_DANGKY] AS TABLE(
	[MALTC] [int] NULL,
	[MASV] [nchar](10) NULL,
	[DIEM_CC] [int] NULL,
	[DIEM_GK] [float] NULL,
	[DIEM_CK] [float] NULL
)
GO

-- Cập nhật điểm
CREATE PROC [dbo].[SP_UPDATE_DIEM]
@DIEMTHI TYPE_DANGKY READONLY
AS
BEGIN
	MERGE INTO DANGKY AS Target
	USING (SELECT MALTC, MASV, DIEM_CC, DIEM_GK, DIEM_CK FROM @DIEMTHI) AS Source
	ON Target.MALTC = Source.MALTC AND Target.MASV = Source.MASV
	WHEN MATCHED THEN
		UPDATE SET TARGET.DIEM_CC = SOURCE.DIEM_CC, TARGET.DIEM_GK = SOURCE.DIEM_GK,
					TARGET.DIEM_CK = SOURCE.DIEM_CK
	WHEN NOT MATCHED THEN
		INSERT (MALTC, MASV, DIEM_CC, DIEM_GK, DIEM_CK)
		VALUES (Source.MALTC, Source.MASV, Source.DIEM_CC, Source.DIEM_GK, Source.DIEM_CK);
END
GO

-- Lấy danh sách mã lớp tín chỉ đã đăng ký theo niên khóa - học kỳ của 1 sinh viên
CREATE PROC [dbo].[SP_LAY_DS_MALTC_DADK]
@NK NCHAR(9), @HK INT, @MASV NCHAR(10)
AS
BEGIN
	SELECT DK.MALTC 
	FROM (SELECT MALTC FROM LOPTINCHI WHERE NIENKHOA = @NK AND HOCKY = @HK) LTC,
		(SELECT MALTC FROM DANGKY WHERE MASV = @MASV AND HUYDANGKY = 'FALSE') DK
	WHERE LTC.MALTC = DK.MALTC
END
GO
-- [dbo].[SP_LAY_DS_MALTC_DADK] '2021-2022', 1, 'N15DCCN001'

-- Tạo type sinh viên đăng ký
CREATE TYPE [dbo].[TYPE_SV_DANGKY] AS TABLE(
	[MALTC] [int] NULL,
	[MASV] [nchar](10) NULL,
	[HUYDANGKY] BIT DEFAULT 'FALSE'
)
GO

-- Cập nhật đăng ký của một sinh viên
CREATE PROC [dbo].[SP_UPDATE_DANGKY]
@DSDANGKY TYPE_SV_DANGKY READONLY
AS
BEGIN	
	MERGE INTO DANGKY AS TARGET
	USING (SELECT MALTC, MASV, HUYDANGKY FROM @DSDANGKY) AS Source
	ON Target.MALTC = Source.MALTC AND TARGET.MASV = Source.MASV
	WHEN MATCHED THEN
		UPDATE SET TARGET.HUYDANGKY = Source.HUYDANGKY
	WHEN NOT MATCHED BY TARGET THEN
		INSERT (MALTC, MASV, HUYDANGKY)
		VALUES (Source.MALTC, Source.MASV, Source.HUYDANGKY);
END
GO

-- Danh sách lớp tín chỉ
CREATE PROC SP_REPORT_DanhSachLopTinChi
@NK NCHAR(9), @HK INT
AS
BEGIN
	IF 1=0 BEGIN
		SET FMTONLY OFF
	END

	SELECT LTC.MALTC, SOSVDADANGKY = COUNT(MASV) INTO #DSSOSVDANGKY
	FROM (SELECT MALTC FROM LOPTINCHI WHERE NIENKHOA = @NK AND HOCKY = @HK AND HUYLOP = 'FALSE') LTC
	LEFT JOIN (SELECT MALTC, MASV FROM DANGKY WHERE HUYDANGKY = 'FALSE') DK 
	ON LTC.MALTC = DK.MALTC
	GROUP BY LTC.MALTC

	SELECT TENMH, NHOM, HOTENGVGIANG = HO + ' ' + TEN, SOSVTOITHIEU, SOSVDADANGKY
	FROM (SELECT MALTC, MAMH, NHOM, MAGV, SOSVTOITHIEU FROM LOPTINCHI WHERE NIENKHOA = @NK AND HOCKY = @HK AND HUYLOP = 'FALSE') LTC,
		(SELECT MAMH, TENMH FROM MONHOC) MH, 
		(SELECT MAGV, HO, TEN FROM GIANGVIEN) GV, #DSSOSVDANGKY
	WHERE  LTC.MAMH = MH.MAMH AND LTC.MAGV = GV.MAGV AND LTC.MALTC = #DSSOSVDANGKY.MALTC
	ORDER BY TENMH, NHOM
END
GO
-- SP_REPORT_DanhSachLopTinChi '2021-2022', 1

-- Danh sách sinh viên đăng ký lớp tín chỉ
CREATE PROC SP_REPORT_DanhSachSinhVienDangKyLopTinChi
@NK NCHAR(9), @HK INT, @MAMH NCHAR(10), @NHOM INT
AS
BEGIN
	IF 1=0 BEGIN
		SET FMTONLY OFF
	END

	DECLARE @MALTC INT = -1
	SELECT @MALTC = MALTC
	FROM LOPTINCHI 
	WHERE NIENKHOA = @NK AND HOCKY = @HK AND MAMH = @MAMH AND NHOM = @NHOM

	SELECT MASV INTO #DK
	FROM DANGKY
	WHERE MALTC = @MALTC

	SELECT MASV, HO, TEN, 
	CASE
		WHEN PHAI = 0 THEN N'Nam'
		WHEN PHAI = 1 THEN N'Nữ'
	END AS PHAI, MALOP
	FROM SINHVIEN
	WHERE MASV IN (SELECT MASV FROM #DK) AND DANGHIHOC = 'FALSE'
	ORDER BY TEN, HO
END
GO
-- SP_REPORT_DanhSachSinhVienDangKyLopTinChi '2021-2022', 1, 'CTDL', 3

-- Bảng điểm môn học của 1 lớp tín chỉ
CREATE PROC SP_REPORT_BangDiemMonHoc
@NK NCHAR(9), @HK INT, @MAMH NCHAR(10), @NHOM INT
AS
BEGIN
	IF 1=0 BEGIN
		SET FMTONLY OFF
	END

	DECLARE @MALTC INT = -1
	SELECT @MALTC = MALTC
	FROM LOPTINCHI 
	WHERE NIENKHOA = @NK AND HOCKY = @HK AND MAMH = @MAMH AND NHOM = @NHOM

	SELECT DK.MASV, HO, TEN, DIEM_CC, DIEM_GK, DIEM_CK
	FROM (SELECT MASV, DIEM_CC, DIEM_GK, DIEM_CK FROM DANGKY WHERE MALTC = @MALTC) DK,
		(SELECT MASV, HO, TEN FROM SINHVIEN WHERE DANGHIHOC = 'FALSE') SV
	WHERE DK.MASV = SV.MASV
	ORDER BY TEN, HO
END
GO
-- SP_REPORT_BangDiemMonHoc '2021-2022', 1, 'CTDL', 1

-- Phiếu điểm
CREATE PROC SP_REPORT_PhieuDiem
@MASV NCHAR(10)
AS
BEGIN
	SELECT TENMH, MAX(DIEM_HM)
	FROM (SELECT MALTC, MASV, DIEM_HM = DIEM_CC * 0.1 + DIEM_GK * 0.3 + DIEM_CK * 0.6 FROM DANGKY WHERE MASV = @MASV) DK,
		(SELECT MALTC, MAMH FROM LOPTINCHI WHERE HUYLOP = 'FALSE') LTC,
		(SELECT MAMH, TENMH FROM MONHOC) MH
	WHERE DK.MALTC = LTC.MALTC AND LTC.MAMH = MH.MAMH
	GROUP BY TENMH
	ORDER BY TENMH
END
GO
-- SP_REPORT_PhieuDiem 'N15DCCN001'

-- Danh sách đóng học phí của lớp
CREATE PROC SP_REPORT_DanhSachDongHocPhiLop
@MALOP NCHAR(10), @NK NCHAR(9), @HK INT
AS
BEGIN
	IF 1=0 BEGIN
		SET FMTONLY OFF
	END

	SELECT HOTEN = HO + ' ' + TEN, HOCPHI, SOTIENDADONG = SUM(SOTIENDONG)
	FROM (SELECT MASV, HOCPHI FROM HOCPHI WHERE NIENKHOA = @NK AND HOCKY = @HK) HP
	LEFT JOIN (SELECT MASV, SOTIENDONG FROM CT_DONGHOCPHI WHERE NIENKHOA = @NK AND HOCKY = @HK) CTDHP
	ON HP.MASV = CTDHP.MASV, (SELECT MASV, HO, TEN FROM SINHVIEN WHERE MALOP = @MALOP) SV
	WHERE HP.MASV = SV.MASV
	GROUP BY HO, TEN, HOCPHI
	ORDER BY TEN, HO
END
GO
-- SP_REPORT_DanhSachDongHocPhiLop 'D15CQCP01', '2021-2022', 1

-- Bảng điểm tổng kết
CREATE PROC SP_REPORT_BangDiemTongKet
@MALOP NCHAR(10)
AS
BEGIN
	IF 1=0 BEGIN
		SET FMTONLY OFF
	END

	SELECT MASV, HO, TEN INTO #SV
	FROM SINHVIEN 
	WHERE MALOP = @MALOP

	SELECT MASV, MAMH, DIEM = MAX(DIEM_HM) INTO #BANGDIEM
	FROM (SELECT MALTC, MASV, DIEM_HM = (0.1 * DIEM_CC + 0.3 * DIEM_GK + 0.6 * DIEM_CK) FROM DANGKY WHERE MASV IN (SELECT MASV FROM #SV)) DK,
		(SELECT MALTC, MAMH FROM LOPTINCHI) LTC
	WHERE DK.MALTC = LTC.MALTC
	GROUP BY MASV, MAMH
	
	SELECT #SV.MASV, HOTEN = HO + ' ' + TEN, TENMH, DIEM
	FROM #BANGDIEM, #SV,
		(SELECT MAMH, TENMH FROM MONHOC) MH
	WHERE #BANGDIEM.MASV = #SV.MASV AND #BANGDIEM.MAMH = MH.MAMH
	ORDER BY MASV
END
GO
-- SP_REPORT_BangDiemTongKet 'D15CQCP01'